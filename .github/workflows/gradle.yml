# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
    - name: Get version from mods.toml
      id: get_version
      run: |
        cat ./src/main/resources/META-INF/mods.toml \
        | grep 'version=' \
        | grep -v '#' \
        | cut -d'=' -f 2 \
        | sed 's/"//g' \
        > ./version
        echo "##[set-output name=version;]$(cat ./version)"
    - name: Upload jar
      uses: actions/upload-artifact@v2
      with:
        name: ironmod-${{ steps.get_version.outputs.version }}-${{ github.run_id }}.jar
        path: build/libs/ironmod-${{ steps.get_version.outputs.version }}.jar
    - name: Upload version file
      uses: actions/upload-artifact@v2
      with:
        name: version
        path: version
  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [ 'build' ]
    steps:
    - name: Download version file
      uses: actions/download-artifact@v2
      with:
        name: version
    - name: Get version from version file
      id: get_version
      run: echo "##[set-output name=version;]$(cat ./version)"
    - name: Download jar
      id: download
      uses: actions/download-artifact@v2
      with:
        name: ironmod-${{ steps.get_version.outputs.version }}-${{ github.run_id }}.jar
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: List download-path
      run: ls -lha ${{ steps.download.outputs.download-path }}
    - name: List cwd
      run: ls -lha
    - name: Upload Release Asset
      id: upload_release_asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.download.outputs.download-path }}/ironmod-${{ steps.get_version.outputs.version }}.jar
        asset_name: ironmod-${{ steps.get_version.outputs.version }}.jar
        asset_content_type: application/java-archive